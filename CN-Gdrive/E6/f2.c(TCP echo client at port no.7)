#include<sys/types.h>
#include<sys/socket.h>
#include<stdio.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<unistd.h>
#include<stdlib.h>
#include<string.h>

#define BUFFERSIZE 1024

#define PORT 7

int main(int argc, char *argv[]){
	int sd,n;
	ssize_t i,j;
	char buffer[BUFFERSIZE];
	struct sockaddr_in server_addr;
	if(argc != 2){
		printf("Usage: %s server-address\n", argv[0]);
		exit(1);
	}

	sd = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
	if(sd== -1){
		perror("socket-call");
		exit(1);
	}

	server_addr.sin_family = AF_INET;
	server_addr.sin_port = htons(PORT);
	n = inet_aton(argv[1], &(server_addr.sin_addr));
	if(n == 0){
		printf("inet_aton-Invalid address\n");
		exit(1);
	}

	n = connect(sd, (struct sockaddr*)&server_addr, sizeof(server_addr));
	if(n == -1){
		perror("connect-call");
		exit(1);
	}

	write(STDOUT_FILENO, "Enter the String:",17);
	memset(buffer, '\0', BUFFERSIZE);
	i = read(STDIN_FILENO, buffer, BUFFERSIZE);
	if(i == -1){
		perror("read1");
		exit(1);
	}
	printf("bytes read from keyboard = %lu\n",i);

	j = write(sd, buffer, i);

	if(j == -1){
		perror("write1");
		exit(1);
	}

	printf("bytes written in server's socket=%lu\n",j);
	memset(buffer, '\0' , BUFFERSIZE);
	
	i = read(sd, buffer, BUFFERSIZE);
	if(i == -1){
		perror("read2");
		exit(1);
	}

	printf("bytes read from server's socket = %lu\n",i);
	write(STDOUT_FILENO, "Reply from echo server->",24);
	j = write(STDOUT_FILENO, buffer, i);
	if(j == -1){
		perror("write2");
		exit(1);
	}

	shutdown(sd, SHUT_RDWR);
	return 0;
}
